// Generated by Dagger (https://dagger.dev).
package com.example.badgermapstask.data.repository;

import com.example.badgermapstask.data.model.CustomerProvider;
import com.example.badgermapstask.data.network.CustomerService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CustomerRepository_Factory implements Factory<CustomerRepository> {
  private final Provider<CustomerService> apiProvider;

  private final Provider<CustomerProvider> customerProvider;

  public CustomerRepository_Factory(Provider<CustomerService> apiProvider,
      Provider<CustomerProvider> customerProvider) {
    this.apiProvider = apiProvider;
    this.customerProvider = customerProvider;
  }

  @Override
  public CustomerRepository get() {
    return newInstance(apiProvider.get(), customerProvider.get());
  }

  public static CustomerRepository_Factory create(Provider<CustomerService> apiProvider,
      Provider<CustomerProvider> customerProvider) {
    return new CustomerRepository_Factory(apiProvider, customerProvider);
  }

  public static CustomerRepository newInstance(CustomerService api,
      CustomerProvider customerProvider) {
    return new CustomerRepository(api, customerProvider);
  }
}
