// Generated by Dagger (https://dagger.dev).
package com.example.badgermapstask.presentation.viewModel;

import com.example.badgermapstask.domain.useCases.GetCostumersOrderedAlphabetically;
import com.example.badgermapstask.domain.useCases.GetEarliestCheckInCustomer;
import com.example.badgermapstask.domain.useCases.GetJobsOrderedAlphabetically;
import com.example.badgermapstask.domain.useCases.GetLastCheckInCustomer;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CustomerViewModel_Factory implements Factory<CustomerViewModel> {
  private final Provider<GetLastCheckInCustomer> getLastCheckInCustomerProvider;

  private final Provider<GetEarliestCheckInCustomer> getEarliestCheckInCustomerProvider;

  private final Provider<GetCostumersOrderedAlphabetically> getCostumersOrderedAlphabeticallyProvider;

  private final Provider<GetJobsOrderedAlphabetically> getJobsOrderedAlphabeticallyProvider;

  public CustomerViewModel_Factory(Provider<GetLastCheckInCustomer> getLastCheckInCustomerProvider,
      Provider<GetEarliestCheckInCustomer> getEarliestCheckInCustomerProvider,
      Provider<GetCostumersOrderedAlphabetically> getCostumersOrderedAlphabeticallyProvider,
      Provider<GetJobsOrderedAlphabetically> getJobsOrderedAlphabeticallyProvider) {
    this.getLastCheckInCustomerProvider = getLastCheckInCustomerProvider;
    this.getEarliestCheckInCustomerProvider = getEarliestCheckInCustomerProvider;
    this.getCostumersOrderedAlphabeticallyProvider = getCostumersOrderedAlphabeticallyProvider;
    this.getJobsOrderedAlphabeticallyProvider = getJobsOrderedAlphabeticallyProvider;
  }

  @Override
  public CustomerViewModel get() {
    return newInstance(getLastCheckInCustomerProvider.get(), getEarliestCheckInCustomerProvider.get(), getCostumersOrderedAlphabeticallyProvider.get(), getJobsOrderedAlphabeticallyProvider.get());
  }

  public static CustomerViewModel_Factory create(
      Provider<GetLastCheckInCustomer> getLastCheckInCustomerProvider,
      Provider<GetEarliestCheckInCustomer> getEarliestCheckInCustomerProvider,
      Provider<GetCostumersOrderedAlphabetically> getCostumersOrderedAlphabeticallyProvider,
      Provider<GetJobsOrderedAlphabetically> getJobsOrderedAlphabeticallyProvider) {
    return new CustomerViewModel_Factory(getLastCheckInCustomerProvider, getEarliestCheckInCustomerProvider, getCostumersOrderedAlphabeticallyProvider, getJobsOrderedAlphabeticallyProvider);
  }

  public static CustomerViewModel newInstance(GetLastCheckInCustomer getLastCheckInCustomer,
      GetEarliestCheckInCustomer getEarliestCheckInCustomer,
      GetCostumersOrderedAlphabetically getCostumersOrderedAlphabetically,
      GetJobsOrderedAlphabetically getJobsOrderedAlphabetically) {
    return new CustomerViewModel(getLastCheckInCustomer, getEarliestCheckInCustomer, getCostumersOrderedAlphabetically, getJobsOrderedAlphabetically);
  }
}
