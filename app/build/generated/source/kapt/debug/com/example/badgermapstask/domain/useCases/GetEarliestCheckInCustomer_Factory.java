// Generated by Dagger (https://dagger.dev).
package com.example.badgermapstask.domain.useCases;

import com.example.badgermapstask.data.repository.CustomerRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetEarliestCheckInCustomer_Factory implements Factory<GetEarliestCheckInCustomer> {
  private final Provider<CustomerRepository> repositoryProvider;

  public GetEarliestCheckInCustomer_Factory(Provider<CustomerRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetEarliestCheckInCustomer get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetEarliestCheckInCustomer_Factory create(
      Provider<CustomerRepository> repositoryProvider) {
    return new GetEarliestCheckInCustomer_Factory(repositoryProvider);
  }

  public static GetEarliestCheckInCustomer newInstance(CustomerRepository repository) {
    return new GetEarliestCheckInCustomer(repository);
  }
}
